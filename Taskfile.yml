version: '3'

vars:
  OUTPUT_FILE: "{{ env \"OUTPUT_FILE\" | default \"./bin/server\" }}"
  INPUT_DIR: ./cmd/server
  COMPOSE_FILE: ./deployment/compose.yaml

tasks:
  build-bin:
    env:
      CGO_ENABLED: 0
      GOARCH: "{{.TARGETARCH | default `amd64`}}"
      GOEXPERIMENT: arenas
    cmds:
      - go build -o "{{.OUTPUT_FILE}}" "{{.INPUT_DIR}}"
    silent: true

  generate:
    cmds:
      - mkdir -p ./gen
      - protoc --go_out=./gen --go_opt=paths=source_relative --go-grpc_out=./gen --go-grpc_opt=paths=source_relative ./api/proto/*.proto
      - go generate ./...

  build:
    cmds:
      - docker buildx build --target final --load -t snowflakeid_arena:latest -f ./deployment/Dockerfile .

  run:
    desc: "Running a single container with app and etcd without envoy on port 5049"
    deps: [run-etcd]
    cmds:
      - docker run --network deployment_backend --name snowflakegrpc --rm --env-file .env -p 5049:5051 snowflakeid_arena:latest

  run-etcd:
    cmds:
      - docker compose -f ./deployment/compose.yaml up -d etcd_node1 etcd_node2 etcd_node3
  
  run-compose:
    cmds:
      - docker compose -f ./deployment/compose.yaml up -d

  test:
    deps: [run]
    cmds:
      - go test -v ./...
